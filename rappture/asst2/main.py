# ----------------------------------------------------------------------
#  MAIN PROGRAM - generated by the Rappture Builder
# ----------------------------------------------------------------------
import Rappture
import sys
from math import *

# open the XML file containing the run parameters
io = Rappture.library(sys.argv[1])

#########################################################
# Get input values from Rappture
#########################################################

# get input value for input.note(spirograph_notes)
spirograph_notes = io.get('input.note(spirograph_notes).current')

# get input value for input.group(gid1).group(gidparam).string(param1)
param1 = io.get('input.group(gid1).group(gidparam).string(param1).current')

# get input value for input.group(gid1).group(gidparam).string(param2)
param2 = io.get('input.group(gid1).group(gidparam).string(param2).current')

# get input value for input.group(gid1).group(gidparam).string(param3)
param3 = io.get('input.group(gid1).group(gidparam).string(param3).current')

# get input value for input.group(gid1).group(gidcom).boolean(ecom)
# returns value as string "yes" or "no"
ecom = io.get('input.group(gid1).group(gidcom).boolean(ecom).current') == 'yes'

# get input value for input.group(gid1).group(gidcom).string(Comment)
Comment = io.get('input.group(gid1).group(gidcom).string(Comment).current')


#########################################################
#  Add your code here for the main body of your program
#########################################################
if ecom:
    out1 = Comment
else:
    out1 = r"""Parameters
               Param1:  {0}
               Param2:  {0}
               Param3:  {0}"""
    out1 = out1.format(param1,param2,param3)

# spit out progress messages as you go along...
Rappture.Utils.progress(0, "Starting...")
Rappture.Utils.progress(5, "Loading data...")
Rappture.Utils.progress(50, "Half-way there")
Rappture.Utils.progress(100, "Done")

#########################################################
# Save output values back to Rappture
#########################################################

# save output value for output.string(out1)
io.put('output.string(out1).current',out1)


Rappture.result(io)
sys.exit()
