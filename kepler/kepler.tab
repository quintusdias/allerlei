drop table if exists stars CASCADE;

drop sequence if exists star_seq CASCADE;

create sequence star_seq;

create table stars (
    id                   integer DEFAULT nextval('star_seq') PRIMARY KEY,
    name                 varchar(80) NOT NULL,
    name_hd              text,
    name_hip             text,
    constellation        text,
    type                 text,
    mass                 real,
    radius               real,
    teff                 real,
    luminosity           real,
    fe_h                 real,
    age                  real,
    appar_mag            real,
    distance             real,
    right_ascension      real,
    declination          real,
    num_planets          integer,
    num_planets_hab_zone integer,
    hab_zone_min         real,
    hab_zone_max         real,
    hab_cat              boolean
);


drop table if exists planets;

drop sequence if exists planet_seq CASCADE;

create sequence planet_seq;

create table planets (
    id                   integer DEFAULT nextval('planet_seq') PRIMARY KEY,
    star_id              integer references stars(id),
    name                 text,
    name_kepler          text,
    name_koi             text,
    zone_class           text,
    mass_class           text,
    composition_class    text,
    atmosphere_class     text,
    habitable_class      text,
    min_mass             real,
    mass                 real,
    max_mass             real,
    radius               real,
    density              real,
    gravity              real,
    escape_velocity      real,
    minimum_stellar_flux real,
    mean_stellar_flux    real,
    maximum_stellar_flux real,
    teq_min              real,
    teq_mean             real,
    teq_max              real,
    ts_min               real,
    ts_mean              real,
    ts_max               real,
    surf_pres            real,
    magnitude            real,
    appar_size           real,
    period               real,
    semi_major_axis      real,
    eccentricity        real,
    mean_distance        real,
    inclination          real,
    omega                real,
    star_magnitude_from_planet real,
    star_size_from_planet real,
    hzd                      real,
    hzc                      real,
    hza                      real,
    hzi                      real,
    sph                      real,
    int_esi                  real,
    surf_esi                 real,
    esi                      real,
    habitable                boolean,
    hab_moon                 boolean,
    confirmed             boolean,
    discovery_method      text,
    discovery_year        integer
);

comment on column planets.name is 'Planet name.';
comment on column planets.name_kepler is 'Planet NASA Kepler name, if applicable';
comment on column planets.name_koi is 'Planet NASA Kepler Object of Interest (KOI) name, if applicable.';
comment on column planets.zone_class is 'Planet habitable zone classification (hot, warm, or cold).';
comment on column planets.mass_class is 'Planet Mass Class (mercurian, subterran, terran, superterran, neptunian, or jovian).';
comment on column planets.composition_class is 'Planet Composition Class (iron, rocky-iron, rocky-water, water-gas, gas).';
comment on column planets.atmosphere_class is 'Planet Atmosphere Class (none, metals-rich, hydrogen-rich).';
comment on column planets.habitable_class is 'Planet Habitable Class (mesoplanet, thermoplanet, psychroplanet, hypopsychroplanet, hyperthermoplanet, non-habitable).';
comment on column planets.min_mass is 'Planet minimum mass.  Earth Units, EU';
comment on column planets.mass is 'Planet mass. Most of the values were estimated from minimum mass.  Earth Units, EU';
comment on column planets.max_mass is 'Planet maximum mass.  Earth Units, EU';
comment on column planets.radius is 'Planet radius.  Most of these values were estimated for confirmed planets.  Earth Units, EU';

